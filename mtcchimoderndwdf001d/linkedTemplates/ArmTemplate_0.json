{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "mtcchimoderndwdf001d"
		},
		"AzureMapsAPI_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://atlas.microsoft.com/"
		},
		"data_lake_storage_account_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://andrdatalake001d.dfs.core.windows.net"
		},
		"key_vault_secrets_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://mtcchimoderndwkv001d.vault.azure.net/"
		},
		"ssisIntegrationRuntime_properties_typeProperties_ssisProperties_catalogInfo_catalogServerEndpoint": {
			"type": "string",
			"defaultValue": "mtcchioltp001d.database.windows.net"
		},
		"meta_data_configuration_db_properties_typeProperties_connectionString_secretName": {
			"type": "string",
			"defaultValue": "MetaDataConfigurationConnectionString"
		},
		"meta_data_configuration_db_v2_properties_typeProperties_connectionString_secretName": {
			"type": "string",
			"defaultValue": "MetaDataConfigurationMongoDB"
		},
		"meta_data_configuration_db_v2_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "MetaDataConfiguration"
		},
		"worldwide_importers_db_properties_typeProperties_connectionString_secretName": {
			"type": "string",
			"defaultValue": "@linkedService().databaseConnectionStringSecretName"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/AzureMapsAPI')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('AzureMapsAPI_properties_typeProperties_url')]",
					"enableServerCertificateValidation": false,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/data_lake_storage_account')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('data_lake_storage_account_properties_typeProperties_url')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/databricks')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-6393053478803514.14.azuredatabricks.net",
					"authentication": "MSI",
					"workspaceResourceId": "/subscriptions/a6ead19a-5000-4940-a53c-fd7fb677e402/resourceGroups/ANDR-MODERN-DW-001-D/providers/Microsoft.Databricks/workspaces/andrdataprocessing001d",
					"instancePoolId": "0806-153306-geode373-pool-KRKLmD5e",
					"newClusterNumOfWorker": "2",
					"newClusterSparkConf": {
						"fs.azure.account.key.andrdatalake001d.dfs.core.windows.net": "askZROyq8oZ+mOuAjLDjUZbmPSGeLnZ5UGUXMTWcQSDV4hYhVFzYSzfXKJqgkdFxrDZhiIB9B3c2qCKtXAhi8g==",
						"fs.azure.createRemoteFileSystemDuringInitialization": "true",
						"spark.databricks.delta.preview.enabled": "true",
						"spark.databricks.delta.optimizeWrite.enabled": "true",
						"spark.databricks.delta.autoCompact.enabled": "true"
					},
					"newClusterSparkEnvVars": {
						"PYSPARK_PYTHON": "/databricks/python3/bin/python3"
					},
					"newClusterVersion": "7.5.x-scala2.12",
					"newClusterInitScripts": []
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/key_vault_secrets')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('key_vault_secrets_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/tumbling-window-1-hour')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Hour",
					"interval": 1,
					"startTime": "2020-08-07T12:00:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 50,
					"retryPolicy": {
						"intervalInSeconds": 30
					},
					"dependsOn": []
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ssisIntegrationRuntime')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "East US",
						"nodeSize": "Standard_D2_v3",
						"numberOfNodes": 1,
						"maxParallelExecutionsPerNode": 2
					},
					"ssisProperties": {
						"catalogInfo": {
							"catalogServerEndpoint": "[parameters('ssisIntegrationRuntime_properties_typeProperties_ssisProperties_catalogInfo_catalogServerEndpoint')]",
							"catalogPricingTier": "S1"
						},
						"edition": "Enterprise",
						"licenseType": "BasePrice"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/process-environmental-events')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "This process will move data from Raw to Exploration in some timeframe.",
				"activities": [
					{
						"name": "Process IoT Event Data Raw To Exploration",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/phandreo@microsoft.com/batch-python-exploration",
							"baseParameters": {
								"enqueuedDateTimeBegin": {
									"value": "@pipeline().parameters.startTime",
									"type": "Expression"
								},
								"enqueuedDateTimeEnd": {
									"value": "@pipeline().parameters.endTime",
									"type": "Expression"
								},
								"explorationPath": {
									"value": "@pipeline().parameters.explorationPath",
									"type": "Expression"
								},
								"mergeJoin": {
									"value": "@pipeline().parameters.mergeJoin",
									"type": "Expression"
								},
								"sqlStatement": {
									"value": "@pipeline().parameters.sqlStatement",
									"type": "Expression"
								},
								"partitionByColumn": {
									"value": "@pipeline().parameters.partitionByColumn",
									"type": "Expression"
								},
								"explorationTableDuplicates": {
									"value": "@pipeline().parameters.explorationTableDuplicates",
									"type": "Expression"
								},
								"explorationTable": {
									"value": "@pipeline().parameters.explorationTable",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "databricks",
							"type": "LinkedServiceReference"
						}
					}
				],
				"parameters": {
					"startTime": {
						"type": "string",
						"defaultValue": "2020-12-28 00:00:00"
					},
					"endTime": {
						"type": "string",
						"defaultValue": "2020-12-28 18:30:00"
					},
					"explorationPath": {
						"type": "string",
						"defaultValue": "/mnt/andrdatalake001x/exploration/iotevents/temperature-events/delta"
					},
					"mergeJoin": {
						"type": "string",
						"defaultValue": "t.sensor = s.sensor and t.deviceId = s.deviceId and t.enqueuedTime = s.enqueuedTime and t.timestamp = s.timestamp"
					},
					"sqlStatement": {
						"type": "string",
						"defaultValue": "SELECT body.sensor, enqueuedTime, enqueuedDate, systemProperties[\"iothub-connection-device-id\"] as deviceId, body.timestamp, body.series[0].temperature as temperature, body.series[0].humidity as humidity, body.series[0].dewpoint as dewpoint, body.series[0].altitude as altitude, body.series[0].pressure as pressure FROM raw.iotenvironmentalsensor WHERE body.sensor IN (\"dht11\", \"bme280\") and (enqueuedTime >= to_timestamp(\"%s\") and enqueuedTime < to_timestamp(\"%s\"))"
					},
					"partitionByColumn": {
						"type": "string",
						"defaultValue": "sensor"
					},
					"explorationTableDuplicates": {
						"type": "string",
						"defaultValue": "default.duplicateeventsairquality"
					},
					"explorationTable": {
						"type": "string",
						"defaultValue": "exploration.airqualityevents"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/databricks')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ssis-purview-demo')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "execute master ssis package",
						"type": "ExecuteSSISPackage",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"packageLocation": {
								"packagePath": "PurviewDemo/SSIS-With-Purview/Master_Package.dtsx",
								"type": "SSISDB"
							},
							"environmentPath": null,
							"connectVia": {
								"referenceName": "ssisIntegrationRuntime",
								"type": "IntegrationRuntimeReference"
							},
							"loggingLevel": "Basic",
							"projectConnectionManagers": {},
							"packageConnectionManagers": {}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/ssisIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureMaps')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureMapsAPI",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"relativePath": {
						"type": "string",
						"defaultValue": "weather/currentConditions/json?"
					},
					"apiVersion": {
						"type": "string",
						"defaultValue": "1.0"
					},
					"subscriptionKey": {
						"type": "string",
						"defaultValue": "8lSTicMGFukVS5LUfCG_8Ivq7q08YlGj5DBUZhC2nec"
					},
					"query": {
						"type": "string",
						"defaultValue": "42.148924384904156,-87.99537852892261"
					}
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "@concat(dataset().relativePath, 'api-version=', dataset().apiVersion, '&query=', dataset().query, '&subscription-key=', dataset().subscriptionKey)",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureMapsAPI')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/avro_ingestion_input_file')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "data_lake_storage_account",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"filePath": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					},
					"containerName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "data-ingestion-input"
				},
				"annotations": [],
				"type": "Avro",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().filePath",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().containerName",
							"type": "Expression"
						}
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/data_lake_storage_account')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/data_ingestion_error_output_file')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "data_lake_storage_account",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"containerName": {
						"type": "string"
					},
					"filePath": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "data-ingestion-output"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().filePath",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().containerName",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/data_lake_storage_account')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/data_ingestion_raw_output_file_avro')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "data_lake_storage_account",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"containerName": {
						"type": "string",
						"defaultValue": "raw"
					},
					"filePath": {
						"type": "string"
					},
					"fileName": {
						"type": "string",
						"defaultValue": "invoices.avro"
					}
				},
				"folder": {
					"name": "data-ingestion-output"
				},
				"annotations": [],
				"type": "Avro",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/data_lake_storage_account')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/data_ingestion_raw_output_file_parquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "data_lake_storage_account",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"containerName": {
						"type": "string",
						"defaultValue": "raw"
					},
					"filePath": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "data-ingestion-output"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().filePath",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().containerName",
							"type": "Expression"
						}
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/data_lake_storage_account')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/delmited_ingestion_input_file')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "data_lake_storage_account",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"filePath": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					},
					"containerName": {
						"type": "string"
					},
					"compressionType": {
						"type": "string",
						"defaultValue": "none"
					},
					"compressionLevel": {
						"type": "string",
						"defaultValue": "Optimal"
					},
					"columnDelimiter": {
						"type": "string",
						"defaultValue": ","
					},
					"encoding": {
						"type": "string",
						"defaultValue": "UTF-8"
					},
					"escapeCharacter": {
						"type": "string",
						"defaultValue": "\\"
					},
					"quoteCharacter": {
						"type": "string",
						"defaultValue": "\""
					},
					"firstRowAsHeader": {
						"type": "bool",
						"defaultValue": true
					}
				},
				"folder": {
					"name": "data-ingestion-input"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().filePath",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().containerName",
							"type": "Expression"
						}
					},
					"columnDelimiter": {
						"value": "@dataset().columnDelimiter",
						"type": "Expression"
					},
					"compressionCodec": {
						"value": "@dataset().compressionType",
						"type": "Expression"
					},
					"compressionLevel": {
						"value": "@dataset().compressionLevel",
						"type": "Expression"
					},
					"encodingName": {
						"value": "@dataset().encoding",
						"type": "Expression"
					},
					"escapeChar": {
						"value": "@dataset().escapeCharacter",
						"type": "Expression"
					},
					"firstRowAsHeader": {
						"value": "@dataset().firstRowAsHeader",
						"type": "Expression"
					},
					"quoteChar": {
						"value": "@dataset().quoteCharacter",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/data_lake_storage_account')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/error_ingestion_input_file')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "data_lake_storage_account",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"filePath": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					},
					"containerName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "data-ingestion-input"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().filePath",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().containerName",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/data_lake_storage_account')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/json_ingestion_input_file')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "data_lake_storage_account",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"filePath": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					},
					"containerName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "data-ingestion-input"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().filePath",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().containerName",
							"type": "Expression"
						}
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/data_lake_storage_account')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/parquet_ingestion_input_file')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "data_lake_storage_account",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"filePath": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					},
					"containerName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "data-ingestion-input"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().filePath",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().containerName",
							"type": "Expression"
						}
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/data_lake_storage_account')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/meta_data_configuration_db')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "key_vault_secrets",
							"type": "LinkedServiceReference"
						},
						"secretName": "[parameters('meta_data_configuration_db_properties_typeProperties_connectionString_secretName')]"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/key_vault_secrets')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/meta_data_configuration_db_v2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "CosmosDbMongoDbApi",
				"typeProperties": {
					"connectionString": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "key_vault_secrets",
							"type": "LinkedServiceReference"
						},
						"secretName": "[parameters('meta_data_configuration_db_v2_properties_typeProperties_connectionString_secretName')]"
					},
					"database": "[parameters('meta_data_configuration_db_v2_properties_typeProperties_database')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/key_vault_secrets')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/worldwide_importers_db')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"databaseConnectionStringSecretName": {
						"type": "string",
						"defaultValue": "WorldWideImportersConnectionString"
					}
				},
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "key_vault_secrets",
							"type": "LinkedServiceReference"
						},
						"secretName": {
							"value": "[parameters('worldwide_importers_db_properties_typeProperties_connectionString_secretName')]",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/key_vault_secrets')]"
			]
		}
	]
}