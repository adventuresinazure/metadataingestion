{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "mtcchimoderndwdf001d"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/data-ingestion-azure-sql')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Azure SQL Tables To Extract",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[metadata].[GET_SOURCE_DESTINATION_OBJECTS]",
								"storedProcedureParameters": {
									"SERVER_DATABASE": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.sourceDatabaseName",
											"type": "Expression"
										}
									},
									"SERVER_FQDN": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.sourceServerFQDN",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "metadata_objects_to_extract",
								"type": "DatasetReference"
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Loop Through Each Object To Process",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Azure SQL Tables To Extract",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Azure SQL Tables To Extract').output.value",
								"type": "Expression"
							},
							"batchCount": 10,
							"activities": [
								{
									"name": "Copy Source Data To ADLS",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "azure_sql_table",
											"type": "DatasetReference",
											"parameters": {
												"schema": {
													"value": "@item().SCHEMA_NAME",
													"type": "Expression"
												},
												"objectName": {
													"value": "@item().OBJECT_NAME",
													"type": "Expression"
												},
												"databaseName": {
													"value": "@pipeline().parameters.sourceDatabaseName",
													"type": "Expression"
												},
												"serverName": {
													"value": "@pipeline().parameters.sourceServerFQDN",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "azure_data_lake_store_object",
											"type": "DatasetReference",
											"parameters": {
												"storageAccountName": {
													"value": "@item().BRONZE_STORAGE_ACCOUNT_NAME",
													"type": "Expression"
												},
												"containerName": {
													"value": "@item().BRONZE_CONTAINER_NAME",
													"type": "Expression"
												},
												"directory": {
													"value": "@item().BRONZE_DIRECTORY",
													"type": "Expression"
												},
												"fileName": {
													"value": "@concat(toLower(item().OBJECT_NAME), '.snappy.parquet')",
													"type": "Expression"
												},
												"extractionDate": {
													"value": "@pipeline().parameters.extractionDateTime",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"parameters": {
					"sourceServerFQDN": {
						"type": "string",
						"defaultValue": "andrmdwopenhacksourcesql001d.database.windows.net"
					},
					"sourceDatabaseName": {
						"type": "string",
						"defaultValue": "CloudSales"
					},
					"extractionDateTime": {
						"type": "string",
						"defaultValue": "2021-06-22"
					}
				},
				"folder": {
					"name": "data-ingestion"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/metadata_objects_to_extract')]",
				"[concat(variables('factoryId'), '/datasets/azure_sql_table')]",
				"[concat(variables('factoryId'), '/datasets/azure_data_lake_store_object')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/azure_data_lake_store_object')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "data_lake_storage_account",
					"type": "LinkedServiceReference",
					"parameters": {
						"storageAccountName": {
							"value": "@dataset().storageAccountName",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"storageAccountName": {
						"type": "string",
						"defaultValue": "andrdatalake001d"
					},
					"containerName": {
						"type": "string",
						"defaultValue": "bronze"
					},
					"directory": {
						"type": "string",
						"defaultValue": "southridge/cloudsales/addresses"
					},
					"fileName": {
						"type": "string",
						"defaultValue": "addresses.snappy.parquet"
					},
					"extractionDate": {
						"type": "string",
						"defaultValue": "2021-06-22"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@concat(dataset().directory, '/extraction-date=', formatDateTime(dataset().extractionDate, 'yyyy-MM-dd'))",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().containerName",
							"type": "Expression"
						}
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/data_lake_storage_account')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/azure_sql_table')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "azure_sql_db",
					"type": "LinkedServiceReference",
					"parameters": {
						"databaseName": {
							"value": "@dataset().databaseName",
							"type": "Expression"
						},
						"serverFQDN": "andrmdwopenhacksourcesql001d.database.windows.net"
					}
				},
				"parameters": {
					"schema": {
						"type": "string",
						"defaultValue": "etl"
					},
					"objectName": {
						"type": "string",
						"defaultValue": "customers"
					},
					"databaseName": {
						"type": "string",
						"defaultValue": "CloudSales"
					},
					"serverName": {
						"type": "string",
						"defaultValue": "andrmdwopenhacksourcesql001d.database.windows.net"
					}
				},
				"folder": {
					"name": "source objects"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().schema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().objectName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/azure_sql_db')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/metadata_objects_to_extract')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "metadata_db",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "metadata objects"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/metadata_db')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/azure_sql_db')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"databaseName": {
						"type": "string",
						"defaultValue": "CloudSales"
					},
					"serverFQDN": {
						"type": "string",
						"defaultValue": "andrmdwopenhacksourcesql001d.database.windows.net"
					}
				},
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": {
						"type": "SecureString",
						"value": "**********"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/data_lake_storage_account')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"storageAccountName": {
						"type": "string",
						"defaultValue": "andrdatalake001d"
					}
				},
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "@{concat('https://', linkedService().storageAccountName, '.dfs.core.windows.net')}"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/metadata_db')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": {
						"type": "SecureString",
						"value": "**********"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/daily-trigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "data-ingestion-azure-sql",
							"type": "PipelineReference"
						},
						"parameters": {
							"sourceServerFQDN": "andrmdwopenhacksourcesql001d.database.windows.net",
							"sourceDatabaseName": "CloudSales",
							"extractionDateTime": "@trigger().startTime"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2021-06-22T20:45:00",
						"timeZone": "Central Standard Time"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/data-ingestion-azure-sql')]"
			]
		}
	]
}