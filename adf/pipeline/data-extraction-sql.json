{
	"name": "data-extraction-sql",
	"properties": {
		"activities": [
			{
				"name": "set objectToExtract",
				"type": "SetVariable",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"variableName": "objectsToExtract",
					"value": {
						"value": "@pipeline().parameters.platformToExtract[0].sourceObjects",
						"type": "Expression"
					}
				}
			},
			{
				"name": "set keyVaultSecretName",
				"type": "SetVariable",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"variableName": "keyVaultSecretName",
					"value": {
						"value": "@pipeline().parameters.platformToExtract[0].keyVaultSecretName",
						"type": "Expression"
					}
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "set objectToExtract",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "set keyVaultSecretName",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@variables('objectsToExtract')",
						"type": "Expression"
					},
					"batchCount": 5,
					"activities": [
						{
							"name": "extract sql tables",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "Start Logging of Activities",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"queryTimeout": "06:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "AvroSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "AvroWriteSettings"
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "azure_sql_table",
									"type": "DatasetReference",
									"parameters": {
										"schema": {
											"value": "@item().sourcingInformation.sourceSchemaName",
											"type": "Expression"
										},
										"objectName": {
											"value": "@item().sourcingInformation.sourceObject",
											"type": "Expression"
										},
										"connectionString": {
											"value": "@variables('keyVaultSecretName')",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "avro_ingestion_input_file",
									"type": "DatasetReference",
									"parameters": {
										"filePath": {
											"value": "@concat(item().landingZone.destination, '/', pipeline().parameters.sourceDatabaseName)",
											"type": "Expression"
										},
										"fileName": {
											"value": "@item().landingZone.fileName",
											"type": "Expression"
										},
										"containerName": {
											"value": "@item().landingZone.containerName",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "Start Logging of Activities",
							"type": "WebActivity",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"url": {
									"value": "@concat(pipeline().parameters.loggingBaseURL,'executionlogs/', pipeline().parameters.LogId)",
									"type": "Expression"
								},
								"method": "POST",
								"headers": {
									"Authorization": {
										"value": "@concat('Bearer ', pipeline().parameters.BearerToken)",
										"type": "Expression"
									}
								},
								"body": {
									"value": "@concat('{\"childPipelineRundId\": \"', pipeline().RunId, '\",\"childPipelineName\": \"', pipeline().Pipeline, '\",\"childSourceObjectName\": \"', item().sourcingInformation.sourceSchemaName, '.', item().sourcingInformation.sourceObject, '\", \"childDestinationObjectName\": \"/', item().landingZone.containerName, item().landingZone.destination, pipeline().parameters.sourceDatabaseName, '/', item().landingZone.fileName, '\", \"childExecutionStatus\": \"In-Progress\", \"childExecutionStartDate\": \"', utcnow(), '\"}')",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Success Logging Activity",
							"type": "WebActivity",
							"dependsOn": [
								{
									"activity": "extract sql tables",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"url": {
									"value": "@concat(pipeline().parameters.loggingBaseURL,'executionlogs/', pipeline().parameters.LogId, '/', activity('Start Logging of Activities').output.data.childExecutionLogId)",
									"type": "Expression"
								},
								"method": "PATCH",
								"headers": {
									"Authorization": {
										"value": "@concat('Bearer ', pipeline().parameters.BearerToken)",
										"type": "Expression"
									}
								},
								"body": {
									"value": "@concat('{\"childExecutions\": { \"childExecutionStatus\":  \"Success\", \"childExecutionEndDate\": \"', utcnow(), '\"}}')",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Failure Logging Activity",
							"type": "WebActivity",
							"dependsOn": [
								{
									"activity": "extract sql tables",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"url": {
									"value": "@concat(pipeline().parameters.loggingBaseURL,'executionlogs/', pipeline().parameters.LogId, '/', activity('Start Logging of Activities').output.data.childExecutionLogId)",
									"type": "Expression"
								},
								"method": "PATCH",
								"headers": {
									"Authorization": {
										"value": "@concat('Bearer ', pipeline().parameters.BearerToken)",
										"type": "Expression"
									}
								},
								"body": {
									"value": "@concat('{\"childExecutions\": { \"childExecutionStatus\":  \"Failure\", \"childExecutionEndDate\": \"', utcnow(), '\"}}')",
									"type": "Expression"
								}
							}
						}
					]
				}
			}
		],
		"parameters": {
			"platformToExtract": {
				"type": "array",
				"defaultValue": [
					{
						"_id": "5ecfcfa73e095f1d78ff3521",
						"sourceDatabaseName": "WorldWideImporters",
						"sourceObjects": [
							{
								"sourcingInformation": {
									"sourceSchemaName": "etl",
									"sourceObject": "customers",
									"loadType": "full"
								},
								"landingZone": {
									"fileName": "customers.avro",
									"destination": "/",
									"fileType": "avro",
									"containerName": "landing"
								},
								"rawZone": {
									"fileName": "customers.parquet",
									"destination": "/WorldWideImporters/Customers",
									"fileType": "parquet",
									"containerName": "raw"
								},
								"_id": "5ecfea681e8b9a4cfcad5e86",
								"name": "Customers",
								"description": "Worldwide Importers Customer Information",
								"columnCount": 29
							},
							{
								"sourcingInformation": {
									"sourceSchemaName": "etl",
									"sourceObject": "invoices",
									"loadType": "incremental"
								},
								"landingZone": {
									"fileName": "invoices.avro",
									"destination": "/",
									"fileType": "avro",
									"containerName": "landing"
								},
								"rawZone": {
									"fileName": "invoices.parquet",
									"destination": "/WorldWideImporters/Invoices",
									"fileType": "parquet",
									"containerName": "raw"
								},
								"_id": "5ecfed961e8b9a4cfcad5e87",
								"name": "Invoices",
								"description": "Worldwide Importers Invoices Information",
								"columnCount": 29
							}
						],
						"keyVaultSecretName": "WorldWideImportersConnectionString",
						"serverName": "mtcchioltp001d.database.windows.net",
						"databaseType": "SqlServer"
					}
				]
			},
			"sourceDatabaseName": {
				"type": "string",
				"defaultValue": "WorldWideImporters"
			},
			"LogId": {
				"type": "string",
				"defaultValue": "5ecfed961e8b9a4cfcad5e87"
			},
			"BearerToken": {
				"type": "string",
				"defaultValue": "1234"
			},
			"loggingBaseURL": {
				"type": "string"
			}
		},
		"variables": {
			"objectsToExtract": {
				"type": "Array",
				"defaultValue": [
					{
						"sourcingInformation": {
							"sourceSchemaName": "etl",
							"sourceObject": "customers",
							"loadType": "full"
						},
						"landingZone": {
							"fileName": "customers.avro",
							"destination": "/",
							"fileType": "avro",
							"containerName": "landing"
						},
						"rawZone": {
							"fileName": "customers.parquet",
							"destination": "/WorldWideImporters/Customers",
							"fileType": "parquet",
							"containerName": "raw"
						},
						"_id": "5ecfea681e8b9a4cfcad5e86",
						"name": "Customers",
						"description": "Worldwide Importers Customer Information",
						"columnCount": 29
					},
					{
						"sourcingInformation": {
							"sourceSchemaName": "etl",
							"sourceObject": "invoices",
							"loadType": "incremental"
						},
						"landingZone": {
							"fileName": "invoices.avro",
							"destination": "/",
							"fileType": "avro",
							"containerName": "landing"
						},
						"rawZone": {
							"fileName": "invoices.parquet",
							"destination": "/WorldWideImporters/Invoices",
							"fileType": "parquet",
							"containerName": "raw"
						},
						"_id": "5ecfed961e8b9a4cfcad5e87",
						"name": "Invoices",
						"description": "Worldwide Importers Invoices Information",
						"columnCount": 29
					}
				]
			},
			"keyVaultSecretName": {
				"type": "String",
				"defaultValue": "WorldWideImportersConnectionString"
			},
			"sourceDatabaseName": {
				"type": "String",
				"defaultValue": "WorldWideImporters"
			}
		},
		"folder": {
			"name": "data-extraction"
		},
		"annotations": []
	}
}