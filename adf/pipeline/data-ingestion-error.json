{
	"name": "data-ingestion-error",
	"properties": {
		"activities": [
			{
				"name": "Copy Data From Landing To Error",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Set the Error Path",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "BinarySource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": true
						}
					},
					"sink": {
						"type": "BinarySink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						}
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "error_ingestion_input_file",
						"type": "DatasetReference",
						"parameters": {
							"filePath": {
								"value": "@pipeline().parameters.filePath",
								"type": "Expression"
							},
							"fileName": {
								"value": "@pipeline().parameters.fileName",
								"type": "Expression"
							},
							"containerName": {
								"value": "@pipeline().parameters.ingestionContainerName",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "data_ingestion_error_output_file",
						"type": "DatasetReference",
						"parameters": {
							"containerName": {
								"value": "@pipeline().parameters.errorContainerName",
								"type": "Expression"
							},
							"filePath": {
								"value": "@variables('errorPathName')",
								"type": "Expression"
							},
							"fileName": {
								"value": "@pipeline().parameters.fileName",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "Delete the landing file",
				"type": "Delete",
				"dependsOn": [
					{
						"activity": "Copy Data From Landing To Error",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "error_ingestion_input_file",
						"type": "DatasetReference",
						"parameters": {
							"filePath": {
								"value": "@pipeline().parameters.filePath",
								"type": "Expression"
							},
							"fileName": {
								"value": "@pipeline().parameters.fileName",
								"type": "Expression"
							},
							"containerName": {
								"value": "@pipeline().parameters.ingestionContainerName",
								"type": "Expression"
							}
						}
					},
					"enableLogging": false,
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true
					}
				}
			},
			{
				"name": "Set the Error Path",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Create Child Execution Log",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "errorPathName",
					"value": {
						"value": "@concat(pipeline().parameters.ingestionContainerName, '/', pipeline().RunId)",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Create Child Execution Log",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[CreateChildExecutionLog]",
					"storedProcedureParameters": {
						"DataFactoryName": {
							"value": {
								"value": "@pipeline().DataFactory",
								"type": "Expression"
							},
							"type": "String"
						},
						"DataFactoryRunId": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "String"
						},
						"ExecutionStartDateTime": {
							"value": {
								"value": "@utcnow()",
								"type": "Expression"
							},
							"type": "String"
						},
						"FileName": {
							"value": {
								"value": "@pipeline().parameters.fileName",
								"type": "Expression"
							},
							"type": "String"
						},
						"ParentDataFactoryRunId": {
							"value": {
								"value": "@pipeline().parameters.parentDataFactoryRunId",
								"type": "Expression"
							},
							"type": "String"
						},
						"PipelineName": {
							"value": {
								"value": "@pipeline().Pipeline",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "meta_data_configuration_db",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "End Child Execution Log",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Delete the landing file",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[EndChildExecutionLog]",
					"storedProcedureParameters": {
						"DataFactoryRunId": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "String"
						},
						"ParentDataFactoryRunId": {
							"value": {
								"value": "@pipeline().parameters.parentDataFactoryRunId",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "meta_data_configuration_db",
					"type": "LinkedServiceReference"
				}
			}
		],
		"parameters": {
			"ingestionContainerName": {
				"type": "string",
				"defaultValue": "landing"
			},
			"fileName": {
				"type": "string",
				"defaultValue": "orders.avro"
			},
			"filePath": {
				"type": "string",
				"defaultValue": "/"
			},
			"errorContainerName": {
				"type": "string",
				"defaultValue": "error"
			},
			"parentDataFactoryRunId": {
				"type": "string",
				"defaultValue": "b303e2d1-b459-4f33-b6d3-d870ddfee214"
			}
		},
		"variables": {
			"errorPathName": {
				"type": "String",
				"defaultValue": "/"
			}
		},
		"folder": {
			"name": "data-ingestion"
		},
		"annotations": []
	}
}