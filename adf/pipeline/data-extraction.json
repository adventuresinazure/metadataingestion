{
	"name": "data-extraction",
	"properties": {
		"activities": [
			{
				"name": "Retrieve Bearer Token",
				"description": "The Web Activity does not support OAuth authentication therefore it is a two step process.   Retrieve the bearer token and then use it wherever it is needed.",
				"type": "WebActivity",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": {
						"value": "@concat('https://login.microsoftonline.com/',pipeline().parameters.TenantId, '/oauth2/token')",
						"type": "Expression"
					},
					"method": "POST",
					"headers": {
						"Content-Type": "application/x-www-form-urlencoded"
					},
					"body": {
						"value": "@concat('grant_type=client_credentials&client_id=',pipeline().parameters.ClientId,'&resource=',pipeline().parameters.ClientId,'&client_secret=',pipeline().parameters.ClientSecret)",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Set bearerToken",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Retrieve Bearer Token",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "bearerToken",
					"value": {
						"value": "@activity('Retrieve Bearer Token').output.access_token",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Retrieve The Objects That Need to be Extracted",
				"description": "The web activity does not support OAuth2 therefore we pass the Bearer Token in the Header to get the data we need for the databaseType and sourceDatabaseName",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "Start Logging of Activities",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": {
						"value": "@concat(pipeline().parameters.loggingBaseURL, 'sourcedatabases?sourceDatabaseName=', pipeline().parameters.databaseName, '&databaseType=', pipeline().parameters.databaseType)",
						"type": "Expression"
					},
					"method": "GET",
					"headers": {
						"Authorization": {
							"value": "@concat('Bearer ', variables('bearerToken'))",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "Switch to the Correct DataSource Type Pipeline",
				"type": "Switch",
				"dependsOn": [
					{
						"activity": "Retrieve The Objects That Need to be Extracted",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"on": {
						"value": "@pipeline().parameters.databaseType",
						"type": "Expression"
					},
					"cases": [
						{
							"value": "SqlServer",
							"activities": [
								{
									"name": "data-extraction-sql",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "data-extraction-sql",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"platformToExtract": {
												"value": "@activity('Retrieve The Objects That Need to be Extracted').output.data",
												"type": "Expression"
											},
											"sourceDatabaseName": {
												"value": "@pipeline().parameters.databaseName",
												"type": "Expression"
											},
											"LogId": {
												"value": "@activity('Start Logging of Activities').output.data._id",
												"type": "Expression"
											},
											"BearerToken": {
												"value": "@variables('bearerToken')",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					]
				}
			},
			{
				"name": "Start Logging of Activities",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "Set bearerToken",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": {
						"value": "@concat(pipeline().parameters.loggingBaseURL,'executionlogs')",
						"type": "Expression"
					},
					"method": "POST",
					"headers": {
						"Authorization": {
							"value": "@concat('Bearer ', variables('bearerToken'))",
							"type": "Expression"
						}
					},
					"body": {
						"value": "@concat('{\"dataFactoryRunId\": \"', pipeline().RunId, '\", \"dataFactoryName\": \"', pipeline().DataFactory, '\", \"pipelineName\": \"', pipeline().Pipeline, '\", \"executionStatus\": \"In-Progress\", \"executionStartDate\": \"', utcnow(), '\"}')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "End Logging Activities with Success",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "Switch to the Correct DataSource Type Pipeline",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": {
						"value": "@concat(pipeline().parameters.loggingBaseURL, 'executionlogs/', activity('Start Logging of Activities').output.data._id)",
						"type": "Expression"
					},
					"method": "PATCH",
					"headers": {
						"Authorization": {
							"value": "@concat('Bearer ', variables('bearerToken'))",
							"type": "Expression"
						}
					},
					"body": {
						"value": "@concat('{\"executionStatus\": \"Success\", \"executionEndDate\": \"', utcnow(), '\"}')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "End Logging Activities with Failure",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "Switch to the Correct DataSource Type Pipeline",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": {
						"value": "@concat(pipeline().parameters.loggingBaseURL, 'executionlogs/', activity('Start Logging of Activities').output.data._id)",
						"type": "Expression"
					},
					"method": "PATCH",
					"headers": {
						"Authorization": {
							"value": "@concat('Bearer ', variables('bearerToken'))",
							"type": "Expression"
						}
					},
					"body": {
						"value": "@concat('{\"executionStatus\": \"Failure\", \"executionEndDate\": \"', utcnow(), '\"}')",
						"type": "Expression"
					}
				}
			}
		],
		"concurrency": 6,
		"parameters": {
			"databaseName": {
				"type": "string",
				"defaultValue": "WorldWideImporters"
			},
			"databaseType": {
				"type": "string",
				"defaultValue": "SqlServer"
			},
			"metadataConfigurationsContainer": {
				"type": "string",
				"defaultValue": "metadata-configurations"
			},
			"TenantId": {
				"type": "string",
				"defaultValue": "72f988bf-86f1-41af-91ab-2d7cd011db47"
			},
			"ClientId": {
				"type": "string",
				"defaultValue": "d7384dff-2ec6-4d61-9fb2-ddd94364905a"
			},
			"ClientSecret": {
				"type": "string",
				"defaultValue": "q~4Mw1F~4Cl.I61L2pdDOR-A3~VtG7mIw2"
			},
			"loggingBaseURL": {
				"type": "string",
				"defaultValue": "https://data-engineering-dev.api.adventuresinazure.com/api/"
			}
		},
		"variables": {
			"bearerToken": {
				"type": "String",
				"defaultValue": "1234532"
			},
			"objectsToExtract": {
				"type": "Array"
			}
		},
		"folder": {
			"name": "data-extraction"
		},
		"annotations": []
	}
}